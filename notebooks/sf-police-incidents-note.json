{
  "paragraphs": [
    {
      "title": "Load  dependencies for accessing s3",
      "text": "%spark.dep\n\nz.reset() // clean up previously added artifact and repository\nz.load(\"org.apache.hadoop:hadoop-aws:2.7.1\")\nz.load(\"com.amazonaws:aws-java-sdk:1.7.4\")",
      "dateUpdated": "2017-11-10T15:07:55+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "title": true,
        "results": {

        },
        "enabled": true
      },
      "settings": {
        "params": {

        },
        "forms": {

        }
      },
      "apps": [

      ],
      "jobName": "paragraph_1510326475027_388556688",
      "id": "20170831-205228_202602273",
      "dateCreated": "2017-11-10T15:07:55+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "focus": true,
      "$$hashKey": "object:2484"
    },
    {
      "title": "Configure spark context",
      "text": "%spark\nsc.hadoopConfiguration.set(\"fs.s3a.access.key\",\"[***]\")\nsc.hadoopConfiguration.set(\"fs.s3a.secret.key\",\"[***]\")\nsc.hadoopConfiguration.set(\"fs.s3a.impl\", \"org.apache.hadoop.fs.s3a.S3AFileSystem\")\nsc.hadoopConfiguration.set(\"fs.s3a.buffer.dir\", \"/root/spark/work,/tmp\") ",
      "dateUpdated": "2017-11-10T15:07:55+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "title": true,
        "results": {

        },
        "enabled": true
      },
      "settings": {
        "params": {

        },
        "forms": {

        }
      },
      "apps": [

      ],
      "jobName": "paragraph_1510326475027_388556688",
      "id": "20170831-205702_465725356",
      "dateCreated": "2017-11-10T15:07:55+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:2485"
    },
    {
      "title": "Load the data and manipulate the data (drop invalid lines, create the DF)",
      "text": "%spark\n\n// load the csv into a Data Frame\nval incidentsDF = spark.read\n         .format(\"csv\")\n         .option(\"header\", \"true\") //reading the headers\n         .option(\"mode\", \"DROPMALFORMED\") // drops the malformed lines\n         .load(\"s3a://lp-deps-test/data/Police_Department_Incidents.csv\")\n\n// check the number of rows\nincidentsDF.count\n",
      "dateUpdated": "2017-11-10T15:07:55+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "title": true,
        "results": {

        },
        "enabled": true
      },
      "settings": {
        "params": {

        },
        "forms": {

        }
      },
      "apps": [

      ],
      "jobName": "paragraph_1510326475027_388556688",
      "id": "20171108-161442_1928064495",
      "dateCreated": "2017-11-10T15:07:55+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:2486"
    },
    {
      "title": "Set up a map for displaying results on it (leaflet.js)",
      "text": "%angular\n\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.5/leaflet.css\" />\n<div id=\"map\" style=\"height: 300px; width: 500px\"></div>\n\n<script type=\"text/javascript\">\nfunction initMap() {\n    var map = L.map('map').setView([37.00, -122.00], 3);\n\n    L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: 'Map data &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors',\n        maxZoom: 12,\n        minZoom: 3\n    }).addTo(map);\n\n    var geoMarkers = L.layerGroup().addTo(map);\n    \n    var el = angular.element($('#map').parent('.ng-scope'));\n    angular.element(el).ready(function() {\n        window.locationWatcher = el.scope().compiledScope.$watch('locations', function(newValue, oldValue) {\n            geoMarkers.clearLayers(); //-- if you want to only show new data clear the layer first\n            angular.forEach(newValue, function(incident) {\n                console.log('Data: ' + incident.values[0]+'|'+ incident.values[2])\n                var marker = L.marker([ incident.values[3],incident.values[2] ])\n                  .bindPopup(incident.values[1] + \", Date: \"+incident.values[4])\n                  .addTo(geoMarkers);\n            });\n        })\n    });\n}\n\nif (window.locationWatcher) {\n    // clear existing watcher otherwise we'll have duplicates\n    window.locationWatcher();\n}\n\n// ensure we only load the script once, seems to cause issues otherwise\nif (window.L) {\n    initMap();\n} else {\n    console.log('Loading Leaflet library');\n    var sc = document.createElement('script');\n    sc.type = 'text/javascript';\n    sc.src = 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.5/leaflet.js';\n    sc.onload = initMap;\n    sc.onerror = function(err) { alert(err); }\n    document.getElementsByTagName('head')[0].appendChild(sc);\n}\n</script>\n",
      "dateUpdated": "2017-11-10T15:07:55+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "text",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/undefined",
        "editorHide": false,
        "title": true,
        "results": {

        },
        "enabled": true
      },
      "settings": {
        "params": {

        },
        "forms": {

        }
      },
      "apps": [

      ],
      "jobName": "paragraph_1510326475028_386632944",
      "id": "20171108-104917_2003412743",
      "dateCreated": "2017-11-10T15:07:55+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:2487"
    },
    {
      "title": "Display the latest 100 incidents (Spark DF api)",
      "text": "%spark\n\nvar resDF = incidentsDF.select(\"IncidntNum\", \"Category\", \"X\", \"Y\",\"Date\",\"Time\").orderBy(desc(\"Date\")).orderBy(desc(\"Time\"))\n\nz.angularBind(\"locations\", resDF.head(100)) // this is what sends the data to the frontend\n",
      "dateUpdated": "2017-11-10T15:07:55+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 438,
              "optionOpen": false
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {

        },
        "forms": {

        }
      },
      "apps": [

      ],
      "jobName": "paragraph_1510326475028_386632944",
      "id": "20171108-112715_119964082",
      "dateCreated": "2017-11-10T15:07:55+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:2488"
    },
    {
      "title": "Display the first 100 incidents for a given category (Spark SQL)",
      "text": "%spark\n\n// register the data as a temp table\nincidentsDF.registerTempTable(\"incidents\")\n\nval sqlDF = spark.sql(\"SELECT IncidntNum, Category, X, Y FROM incidents\")\nz.angularBind(\"locations\", sqlDF.head(100)) // this is what sends the data to the frontend\n\n// register the data as a temp table\nspark.catalog.dropTempView(\"incidents\")\n",
      "dateUpdated": "2017-11-10T15:07:55+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 438,
              "optionOpen": false
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {

        },
        "forms": {

        }
      },
      "apps": [

      ],
      "jobName": "paragraph_1510326475028_386632944",
      "id": "20171110-121044_1386039675",
      "dateCreated": "2017-11-10T15:07:55+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:2489"
    },
    {
      "text": "%sql \nselect * from incidents limit 100\n",
      "dateUpdated": "2017-11-10T15:07:55+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/sql",
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "stackedAreaChart": {
                  "style": "stream"
                }
              },
              "commonSetting": {

              },
              "keys": [
                {
                  "name": "incidNum",
                  "index": 0,
                  "aggr": "sum"
                }
              ],
              "groups": [

              ],
              "values": [
                {
                  "name": "count(1)",
                  "index": 1,
                  "aggr": "sum"
                }
              ]
            },
            "helium": {

            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {

        },
        "forms": {

        }
      },
      "apps": [

      ],
      "jobName": "paragraph_1510326475028_386632944",
      "id": "20170904-175301_1676233597",
      "dateCreated": "2017-11-10T15:07:55+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:2490"
    },
    {
      "text": "%sql\n",
      "dateUpdated": "2017-11-10T15:07:55+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/sql",
        "results": {

        },
        "enabled": true
      },
      "settings": {
        "params": {

        },
        "forms": {

        }
      },
      "apps": [

      ],
      "jobName": "paragraph_1510326475028_386632944",
      "id": "20171107-170825_82319106",
      "dateCreated": "2017-11-10T15:07:55+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:2491"
    }
  ],
  "name": "sf-police-incidents",
  "id": "2CWMATKG6",
  "angularObjects": {
    "2CY2BZW8U:shared_process": [

    ],
    "2CXXXNJUZ:shared_process": [

    ],
    "2CYA3G1JA:shared_process": [

    ],
    "2CZNRR2GQ:shared_process": [

    ],
    "2D1DVZPTB:shared_process": [

    ],
    "2CZF755Q3:shared_process": [

    ],
    "2CZNVMWXF:shared_process": [

    ],
    "2D11X3AQX:shared_process": [

    ],
    "2D1ECS68E:shared_process": [

    ],
    "2CXGKURJ1:shared_process": [

    ],
    "2CXVDDGU9:shared_process": [

    ],
    "2CZQ9RM3B:shared_process": [

    ],
    "2CZSTUMPZ:shared_process": [

    ],
    "2D1A6X8UM:shared_process": [

    ],
    "2CY7GQPFU:shared_process": [

    ],
    "2CXYF979B:shared_process": [

    ],
    "2CYKMP3SF:shared_process": [

    ],
    "2CX78H1HV:shared_process": [

    ],
    "2CXEB2MWQ:shared_process": [

    ]
  },
  "config": {
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {

  }
}
