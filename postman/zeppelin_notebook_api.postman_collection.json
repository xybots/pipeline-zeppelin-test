{
	"info": {
		"name": "Zeppelin Notebook API",
		"_postman_id": "1556ab72-e78b-d507-020b-eddbccf60455",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "List Notebooks",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://{{zeppelin_server}}/api/notebook",
					"protocol": "http",
					"host": [
						"{{zeppelin_server}}"
					],
					"path": [
						"api",
						"notebook"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get Notebook",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://{{zeppelin_server}}/api/notebook/2A94M5J1Z",
					"protocol": "http",
					"host": [
						"{{zeppelin_server}}"
					],
					"path": [
						"api",
						"notebook",
						"2A94M5J1Z"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Import Notebook",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"paragraphs\": [\n    {\n      \"title\": \"Load  dependencies for accessing s3\",\n      \"text\": \"%spark.dep\\n\\nz.reset() // clean up previously added artifact and repository\\nz.load(\\\"org.apache.hadoop:hadoop-aws:2.7.1\\\")\\nz.load(\\\"com.amazonaws:aws-java-sdk:1.7.4\\\")\",\n      \"dateUpdated\": \"2017-11-10T15:07:55+0000\",\n      \"config\": {\n        \"tableHide\": false,\n        \"editorSetting\": {\n          \"language\": \"scala\",\n          \"editOnDblClick\": false\n        },\n        \"colWidth\": 12,\n        \"editorMode\": \"ace/mode/scala\",\n        \"title\": true,\n        \"results\": {\n\n        },\n        \"enabled\": true\n      },\n      \"settings\": {\n        \"params\": {\n\n        },\n        \"forms\": {\n\n        }\n      },\n      \"apps\": [\n\n      ],\n      \"jobName\": \"paragraph_1510326475027_388556688\",\n      \"id\": \"20170831-205228_202602273\",\n      \"dateCreated\": \"2017-11-10T15:07:55+0000\",\n      \"status\": \"READY\",\n      \"errorMessage\": \"\",\n      \"progressUpdateIntervalMs\": 500,\n      \"focus\": true,\n      \"$$hashKey\": \"object:2484\"\n    },\n    {\n      \"title\": \"Configure spark context\",\n      \"text\": \"%spark\\nsc.hadoopConfiguration.set(\\\"fs.s3a.access.key\\\",\\\"[***]\\\")\\nsc.hadoopConfiguration.set(\\\"fs.s3a.secret.key\\\",\\\"[***]\\\")\\nsc.hadoopConfiguration.set(\\\"fs.s3a.impl\\\", \\\"org.apache.hadoop.fs.s3a.S3AFileSystem\\\")\\nsc.hadoopConfiguration.set(\\\"fs.s3a.buffer.dir\\\", \\\"/root/spark/work,/tmp\\\") \",\n      \"dateUpdated\": \"2017-11-10T15:07:55+0000\",\n      \"config\": {\n        \"tableHide\": false,\n        \"editorSetting\": {\n          \"language\": \"scala\",\n          \"editOnDblClick\": false\n        },\n        \"colWidth\": 12,\n        \"editorMode\": \"ace/mode/scala\",\n        \"title\": true,\n        \"results\": {\n\n        },\n        \"enabled\": true\n      },\n      \"settings\": {\n        \"params\": {\n\n        },\n        \"forms\": {\n\n        }\n      },\n      \"apps\": [\n\n      ],\n      \"jobName\": \"paragraph_1510326475027_388556688\",\n      \"id\": \"20170831-205702_465725356\",\n      \"dateCreated\": \"2017-11-10T15:07:55+0000\",\n      \"status\": \"READY\",\n      \"errorMessage\": \"\",\n      \"progressUpdateIntervalMs\": 500,\n      \"$$hashKey\": \"object:2485\"\n    },\n    {\n      \"title\": \"Load the data and manipulate the data (drop invalid lines, create the DF)\",\n      \"text\": \"%spark\\n\\n// load the csv into a Data Frame\\nval incidentsDF = spark.read\\n         .format(\\\"csv\\\")\\n         .option(\\\"header\\\", \\\"true\\\") //reading the headers\\n         .option(\\\"mode\\\", \\\"DROPMALFORMED\\\") // drops the malformed lines\\n         .load(\\\"s3a://lp-deps-test/data/Police_Department_Incidents.csv\\\")\\n\\n// check the number of rows\\nincidentsDF.count\\n\",\n      \"dateUpdated\": \"2017-11-10T15:07:55+0000\",\n      \"config\": {\n        \"tableHide\": false,\n        \"editorSetting\": {\n          \"language\": \"scala\",\n          \"editOnDblClick\": false\n        },\n        \"colWidth\": 12,\n        \"editorMode\": \"ace/mode/scala\",\n        \"title\": true,\n        \"results\": {\n\n        },\n        \"enabled\": true\n      },\n      \"settings\": {\n        \"params\": {\n\n        },\n        \"forms\": {\n\n        }\n      },\n      \"apps\": [\n\n      ],\n      \"jobName\": \"paragraph_1510326475027_388556688\",\n      \"id\": \"20171108-161442_1928064495\",\n      \"dateCreated\": \"2017-11-10T15:07:55+0000\",\n      \"status\": \"READY\",\n      \"errorMessage\": \"\",\n      \"progressUpdateIntervalMs\": 500,\n      \"$$hashKey\": \"object:2486\"\n    },\n    {\n      \"title\": \"Set up a map for displaying results on it (leaflet.js)\",\n      \"text\": \"%angular\\n\\n<link rel=\\\"stylesheet\\\" href=\\\"https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.5/leaflet.css\\\" />\\n<div id=\\\"map\\\" style=\\\"height: 300px; width: 500px\\\"></div>\\n\\n<script type=\\\"text/javascript\\\">\\nfunction initMap() {\\n    var map = L.map('map').setView([37.00, -122.00], 3);\\n\\n    L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\\n        attribution: 'Map data &copy; <a href=\\\"http://openstreetmap.org\\\">OpenStreetMap</a> contributors',\\n        maxZoom: 12,\\n        minZoom: 3\\n    }).addTo(map);\\n\\n    var geoMarkers = L.layerGroup().addTo(map);\\n    \\n    var el = angular.element($('#map').parent('.ng-scope'));\\n    angular.element(el).ready(function() {\\n        window.locationWatcher = el.scope().compiledScope.$watch('locations', function(newValue, oldValue) {\\n            geoMarkers.clearLayers(); //-- if you want to only show new data clear the layer first\\n            angular.forEach(newValue, function(incident) {\\n                console.log('Data: ' + incident.values[0]+'|'+ incident.values[2])\\n                var marker = L.marker([ incident.values[3],incident.values[2] ])\\n                  .bindPopup(incident.values[1] + \\\", Date: \\\"+incident.values[4])\\n                  .addTo(geoMarkers);\\n            });\\n        })\\n    });\\n}\\n\\nif (window.locationWatcher) {\\n    // clear existing watcher otherwise we'll have duplicates\\n    window.locationWatcher();\\n}\\n\\n// ensure we only load the script once, seems to cause issues otherwise\\nif (window.L) {\\n    initMap();\\n} else {\\n    console.log('Loading Leaflet library');\\n    var sc = document.createElement('script');\\n    sc.type = 'text/javascript';\\n    sc.src = 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.5/leaflet.js';\\n    sc.onload = initMap;\\n    sc.onerror = function(err) { alert(err); }\\n    document.getElementsByTagName('head')[0].appendChild(sc);\\n}\\n</script>\\n\",\n      \"dateUpdated\": \"2017-11-10T15:07:55+0000\",\n      \"config\": {\n        \"tableHide\": false,\n        \"editorSetting\": {\n          \"language\": \"text\",\n          \"editOnDblClick\": true\n        },\n        \"colWidth\": 12,\n        \"editorMode\": \"ace/mode/undefined\",\n        \"editorHide\": false,\n        \"title\": true,\n        \"results\": {\n\n        },\n        \"enabled\": true\n      },\n      \"settings\": {\n        \"params\": {\n\n        },\n        \"forms\": {\n\n        }\n      },\n      \"apps\": [\n\n      ],\n      \"jobName\": \"paragraph_1510326475028_386632944\",\n      \"id\": \"20171108-104917_2003412743\",\n      \"dateCreated\": \"2017-11-10T15:07:55+0000\",\n      \"status\": \"READY\",\n      \"errorMessage\": \"\",\n      \"progressUpdateIntervalMs\": 500,\n      \"$$hashKey\": \"object:2487\"\n    },\n    {\n      \"title\": \"Display the latest 100 incidents (Spark DF api)\",\n      \"text\": \"%spark\\n\\nvar resDF = incidentsDF.select(\\\"IncidntNum\\\", \\\"Category\\\", \\\"X\\\", \\\"Y\\\",\\\"Date\\\",\\\"Time\\\").orderBy(desc(\\\"Date\\\")).orderBy(desc(\\\"Time\\\"))\\n\\nz.angularBind(\\\"locations\\\", resDF.head(100)) // this is what sends the data to the frontend\\n\",\n      \"dateUpdated\": \"2017-11-10T15:07:55+0000\",\n      \"config\": {\n        \"tableHide\": false,\n        \"editorSetting\": {\n          \"language\": \"scala\",\n          \"editOnDblClick\": false\n        },\n        \"colWidth\": 12,\n        \"editorMode\": \"ace/mode/scala\",\n        \"title\": true,\n        \"results\": {\n          \"0\": {\n            \"graph\": {\n              \"mode\": \"table\",\n              \"height\": 438,\n              \"optionOpen\": false\n            }\n          }\n        },\n        \"enabled\": true\n      },\n      \"settings\": {\n        \"params\": {\n\n        },\n        \"forms\": {\n\n        }\n      },\n      \"apps\": [\n\n      ],\n      \"jobName\": \"paragraph_1510326475028_386632944\",\n      \"id\": \"20171108-112715_119964082\",\n      \"dateCreated\": \"2017-11-10T15:07:55+0000\",\n      \"status\": \"READY\",\n      \"errorMessage\": \"\",\n      \"progressUpdateIntervalMs\": 500,\n      \"$$hashKey\": \"object:2488\"\n    },\n    {\n      \"title\": \"Display the first 100 incidents for a given category (Spark SQL)\",\n      \"text\": \"%spark\\n\\n// register the data as a temp table\\nincidentsDF.registerTempTable(\\\"incidents\\\")\\n\\nval sqlDF = spark.sql(\\\"SELECT IncidntNum, Category, X, Y FROM incidents\\\")\\nz.angularBind(\\\"locations\\\", sqlDF.head(100)) // this is what sends the data to the frontend\\n\\n// register the data as a temp table\\nspark.catalog.dropTempView(\\\"incidents\\\")\\n\",\n      \"dateUpdated\": \"2017-11-10T15:07:55+0000\",\n      \"config\": {\n        \"tableHide\": false,\n        \"editorSetting\": {\n          \"language\": \"scala\",\n          \"editOnDblClick\": false\n        },\n        \"colWidth\": 12,\n        \"editorMode\": \"ace/mode/scala\",\n        \"editorHide\": false,\n        \"title\": true,\n        \"results\": {\n          \"0\": {\n            \"graph\": {\n              \"mode\": \"table\",\n              \"height\": 438,\n              \"optionOpen\": false\n            }\n          }\n        },\n        \"enabled\": true\n      },\n      \"settings\": {\n        \"params\": {\n\n        },\n        \"forms\": {\n\n        }\n      },\n      \"apps\": [\n\n      ],\n      \"jobName\": \"paragraph_1510326475028_386632944\",\n      \"id\": \"20171110-121044_1386039675\",\n      \"dateCreated\": \"2017-11-10T15:07:55+0000\",\n      \"status\": \"READY\",\n      \"errorMessage\": \"\",\n      \"progressUpdateIntervalMs\": 500,\n      \"$$hashKey\": \"object:2489\"\n    },\n    {\n      \"text\": \"%sql \\nselect * from incidents limit 100\\n\",\n      \"dateUpdated\": \"2017-11-10T15:07:55+0000\",\n      \"config\": {\n        \"tableHide\": false,\n        \"editorSetting\": {\n          \"language\": \"sql\",\n          \"editOnDblClick\": false\n        },\n        \"colWidth\": 12,\n        \"editorMode\": \"ace/mode/sql\",\n        \"results\": {\n          \"0\": {\n            \"graph\": {\n              \"mode\": \"table\",\n              \"height\": 300,\n              \"optionOpen\": false,\n              \"setting\": {\n                \"stackedAreaChart\": {\n                  \"style\": \"stream\"\n                }\n              },\n              \"commonSetting\": {\n\n              },\n              \"keys\": [\n                {\n                  \"name\": \"incidNum\",\n                  \"index\": 0,\n                  \"aggr\": \"sum\"\n                }\n              ],\n              \"groups\": [\n\n              ],\n              \"values\": [\n                {\n                  \"name\": \"count(1)\",\n                  \"index\": 1,\n                  \"aggr\": \"sum\"\n                }\n              ]\n            },\n            \"helium\": {\n\n            }\n          }\n        },\n        \"enabled\": true\n      },\n      \"settings\": {\n        \"params\": {\n\n        },\n        \"forms\": {\n\n        }\n      },\n      \"apps\": [\n\n      ],\n      \"jobName\": \"paragraph_1510326475028_386632944\",\n      \"id\": \"20170904-175301_1676233597\",\n      \"dateCreated\": \"2017-11-10T15:07:55+0000\",\n      \"status\": \"READY\",\n      \"errorMessage\": \"\",\n      \"progressUpdateIntervalMs\": 500,\n      \"$$hashKey\": \"object:2490\"\n    },\n    {\n      \"text\": \"%sql\\n\",\n      \"dateUpdated\": \"2017-11-10T15:07:55+0000\",\n      \"config\": {\n        \"tableHide\": false,\n        \"editorSetting\": {\n          \"language\": \"sql\",\n          \"editOnDblClick\": false\n        },\n        \"colWidth\": 12,\n        \"editorMode\": \"ace/mode/sql\",\n        \"results\": {\n\n        },\n        \"enabled\": true\n      },\n      \"settings\": {\n        \"params\": {\n\n        },\n        \"forms\": {\n\n        }\n      },\n      \"apps\": [\n\n      ],\n      \"jobName\": \"paragraph_1510326475028_386632944\",\n      \"id\": \"20171107-170825_82319106\",\n      \"dateCreated\": \"2017-11-10T15:07:55+0000\",\n      \"status\": \"READY\",\n      \"errorMessage\": \"\",\n      \"progressUpdateIntervalMs\": 500,\n      \"$$hashKey\": \"object:2491\"\n    }\n  ],\n  \"name\": \"sf-police-incidents\",\n  \"id\": \"2CWMATKG6\",\n  \"angularObjects\": {\n  \n  },\n  \"config\": {\n    \"looknfeel\": \"default\",\n    \"personalizedMode\": \"false\"\n  },\n  \"info\": {\n\n  }\n}"
				},
				"url": {
					"raw": "http://{{zeppelin_server}}/api/notebook/import",
					"protocol": "http",
					"host": [
						"{{zeppelin_server}}"
					],
					"path": [
						"api",
						"notebook",
						"import"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Delete Notebook",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://{{zeppelin_server}}/api/notebook/2CXX5H1RR",
					"protocol": "http",
					"host": [
						"{{zeppelin_server}}"
					],
					"path": [
						"api",
						"notebook",
						"2CXX5H1RR"
					]
				},
				"description": ""
			},
			"response": []
		}
	]
}
